java中局部变量必须显示赋值，没有默认初始化值

Spring:
IOC:控制反转
就是将创建对象权交给Spring，让Spring帮我们管理。
具体是：
	1.创建一个applicationpertoties.xml文件，用户我们写配置
	2.当我们编写好一个java类后
	3.在配置文件中以<bean></bean>的格式编写Java类的信息，并配置属性
	4.在需要创建该java对象的地方，通过一个java工厂，来索要对象
IOC中支持 XML方式实现以上功能，同时也支持 注解方式实现
注解方式：就是直接在编写好的java类上做个标记，表示将这个类的对象创建交给Spring，当其他地方需要创建时，再以一种标记表示拿到对象。

AOP:面向切面编程，协助OOP（面向对象编程）
出现背景：有时我们需要再一个方法 执行之前 或 执行之后 或 执行前后 去执行一段代码，通过传统的方式是通过 继承一个父类，在父类的方法中取实现功能，但这样修改起来麻烦
所以，AOP出现：不是通过继承的这种垂直方向实现，而是通过侧面插入来实现
具体是：
	1.创建配置文件
	2.编写切入点：即需要帮助的方法
	3.编写切面类、切面方法：即提供帮助的类、方法
	4.在配置文件中配置切入点和切面类，使他们建立联系

JDBC模板

数据库连接池配置：
Spring自带数据库连接池
DBCP：数据库连接池，配置时需要两个jar包，其他配置同上相似
c3p0：一种数据库连接池，需要一个jar包，配置同上相似，略有不同

使用JDBC模板完成CRUD：
	1.配置连接池
	2.配置JDBC模板，并将数据源（连接池）传给JDBC模板

事务：一组有相关功能的语句，具有原子性、一致性、持久性等

Spring的事务管理：
主要分两类：
	1.编程式
	2.声明式：XML方式、注解方式

事务管理的API：
	1.PlatformTransactionManager:平台事务管理（接口）（核心）
		1.DataSourceTransactionManager:底层使用JDBC管理事务
		2.HibernateTransactionManager:底层使用Hibernate管理事务
	2.TransactionDefinition:事务定义信息：用于定义事务的相关的信息，隔离级别、超时信息、传播行为、是否只读等
	3.TransactonStatus:事务状态